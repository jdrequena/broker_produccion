<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Wed Feb 20 21:23:06 COT 2013
  Author:  Harcalejo
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="PaymentProcess"
         targetNamespace="http://tigo.com/enterprise/serviceEntity/payment/paymentProcess"
         xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:client="http://tigo.com/enterprise/serviceEntity/payment/paymentProcess"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns1="http://tigo.com/enterprise/taskService/paymentService/v1"
         xmlns:ns7="http://tigo.com/enterprise/serviceEntity/provisioning/dataChangeRequest/v1/schema"
         xmlns:ns5="http://tigo.com/enterprise/businessEntity/charge/v1/schema"
         xmlns:ns4="http://tigo.com/enterprise/businessEntity/client/basic/v1/schema"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:ns3="http://tigo.com/commons/basicRequest/v1/schema"
         xmlns:ns6="http://tigo.com/commons/resources/additional/v1/schema"
         xmlns:ns2="http://tigo.com/enterprise/taskService/payment/v1/schema"
         xmlns:ns8="http://tigo.com/enterprise/serviceEntity/provisioning/fieldService/v1/schema"
         xmlns:ns9="http://tigo.com/commons/generalResponse/v1/schema"
         xmlns:ns10="http://xmlns.oracle.com/pcbpel/adapter/db/OrchestratorOrders/Orchestrator/SEQ_NEXT_VAL"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ns11="http://xmlns.oracle.com/pcbpel/adapter/db/OSBUSR/GET_NEXT_ID/"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns12="http://xmlns.oracle.com/pcbpel/adapter/db/OrchestratorOrders/Orchestrator/LOG_ORCHESTRATOR_CHARGE"
         xmlns:ns13="http://xmlns.oracle.com/pcbpel/adapter/db/top/LOG_ORCHESTRATOR_CHARGE"
         xmlns:ns14="http://xmlns.oracle.com/pcbpel/adapter/db/OrchestratorOrders/Orchestrator/LOG_ORCHESTRATOR_CHARGE_UPDATE"
         xmlns:ns15="http://xmlns.oracle.com/pcbpel/adapter/db/top/LOG_ORCHESTRATOR_CHARGE_UPDATE"
         xmlns:ns16="http://tigo.hn/enterprise/faultNotificationService/createFault"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ns17="http://tigo.hn/commons/resources/faultNotificationService/createFaultSchema/schema">
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="paymentprocess_client"
                 partnerLinkType="client:PaymentProcess"
                 myRole="BasicPaymentPort"/>
    <partnerLink name="LOG_ORCHESTRATOR_CHARGE"
                 partnerLinkType="ns12:LOG_ORCHESTRATOR_CHARGE_plt"
                 partnerRole="LOG_ORCHESTRATOR_CHARGE_role"/>
    <partnerLink name="LOG_ORCHESTRATOR_CHARGE_UPDATE"
                 partnerLinkType="ns14:LOG_ORCHESTRATOR_CHARGE_UPDATE_plt"
                 partnerRole="LOG_ORCHESTRATOR_CHARGE_UPDATE_role"/>
    <partnerLink name="PaymentMediator.PaymentMediator"
                 partnerLinkType="ns1:PaymentMediator.PaymentMediator"
                 partnerRole="BasicPaymentPort"/>
    <partnerLink name="FaultNotificationService"
                 partnerLinkType="ns16:FaultNotificationService"
                 partnerRole="FaultNotification_Port"/>
  </partnerLinks>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable"
              messageType="client:BasicPaymentRequest_msg"/>
    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable"
              messageType="client:BasicPaymentResponse_msg"/>
    <variable name="Invoke_PaymentService_Input"
              messageType="ns1:BasicPaymentRequest_msg"/>
    <variable name="Invoke_PaymentService_Output"
              messageType="ns1:BasicPaymentResponse_msg"/>
    <variable name="Invoke_LogChargeInsert_Input"
              messageType="ns12:LogOrchestratorChargeCollection_msg"/>
    <variable name="LogChargeVariable"
              element="ns15:LogOrchestratorChargeCollection"/>
    <variable name="Invoke_LogChargeUpdate_Input"
              messageType="ns14:LogOrchestratorChargeCollection_msg"/>
    <variable name="generalResponse" messageType="client:GeneralResponse_msg"/>
    <variable name="ReferenceTransactionDate" type="xsd:string"/>
    <variable name="Invoke_CreateFault_Input"
              messageType="ns16:CreateFaultRequest_msg"/>
    <variable name="Invoke_CreateFault_Output"
              messageType="ns16:CreateFaultResponse_msg"/>
    <variable name="globalFaultVar"
              element="ns9:GeneralResponse"/>
    <variable name="uti" type="xsd:string"/>
  </variables>
  <faultHandlers>
    <catch faultName="ns16:fault">
      <sequence name="FaultNotification">
        <scope name="LogOrchestratorChargeUpdateError" exitOnStandardFault="no">
          <bpelx:annotation>
            <bpelx:general>
              <bpelx:property name="userLabel">LogChargeUpdateError</bpelx:property>
              <bpelx:property name="userDescription">ErrorParametrizado</bpelx:property>
              <bpelx:property name="userImage">database_lg.png</bpelx:property>
            </bpelx:general>
          </bpelx:annotation>
          <faultHandlers>
            <catchAll>
              <scope name="faultNotification" exitOnStandardFault="no">
                <bpelx:annotation>
                  <bpelx:general>
                    <bpelx:property name="userImage">earth.png</bpelx:property>
                  </bpelx:general>
                </bpelx:annotation>
                <faultHandlers>
                  <catch faultName="ns16:fault" faultVariable="faultVariable"
                         faultElement="ns9:GeneralResponse">
                    <sequence name="fault">
                      <empty name="Empty1"/>
                    </sequence>
                  </catch>
                </faultHandlers>
                <sequence name="faultNotification">
                  <assign name="AssignFaultNotification">
                    <copy>
                      <from>$uti</from>
                      <to>$Invoke_CreateFault_Input.body/uti</to>
                    </copy>
                    <copy>
                      <from><literal>5</literal></from>
                      <to>$Invoke_CreateFault_Input.body/errorID</to>
                    </copy>
                    <copy>
                      <from><literal>177</literal></from>
                      <to>$Invoke_CreateFault_Input.body/serviceID</to>
                    </copy>
                    <copy>
                      <from><literal>O2Service_Bpel</literal></from>
                      <to>$Invoke_CreateFault_Input.body/serviceDetailID</to>
                    </copy>
                    <copy>
                      <from><literal>SOA</literal></from>
                      <to>$Invoke_CreateFault_Input.body/userName</to>
                    </copy>
                    <copy>
                      <from><literal>LogOrchestratorChargeUpdateError - PaymentProcess</literal></from>
                      <to>$Invoke_CreateFault_Input.body/stageName</to>
                    </copy>
                    <copy>
                      <from>ora:getFaultAsString()</from>
                      <to>$Invoke_CreateFault_Input.body/detailError</to>
                    </copy>
                    <copy>
                      <from><literal>INS_ORCHESTRATOR_CHARGE_UPDATE</literal></from>
                      <to>$Invoke_CreateFault_Input.body/instanceID</to>
                    </copy>
                    <copy>
                      <from><literal>656</literal></from>
                      <to>$Invoke_CreateFault_Input.body/errorMappingID</to>
                    </copy>
                    <copy>
                      <from><literal>O2_TEC20</literal></from>
                      <to>$Invoke_CreateFault_Input.body/reasonID</to>
                    </copy>
                  </assign>
                  <invoke name="InvokeFaultNotification"
                          partnerLink="FaultNotificationService"
                          portType="ns16:FaultNotification_Port"
                          operation="CreateFault"
                          inputVariable="Invoke_CreateFault_Input"
                          outputVariable="Invoke_CreateFault_Output"
                          bpelx:invokeAsDetail="no"/>
                </sequence>
              </scope>
            </catchAll>
          </faultHandlers>
          <sequence name="LogOrchestratorChargeUpdateError">
            <if name="ChargeUpdate">
              <documentation>NotEmpty</documentation>
              <condition>ora:countNodes('Invoke_LogChargeUpdate_Input','LogOrchestratorChargeCollection','ns15:LogOrchestratorCharge') &gt; 0</condition>
              <invoke name="Invoke_LogChargeUpdate"
                      partnerLink="LOG_ORCHESTRATOR_CHARGE_UPDATE"
                      portType="ns14:LOG_ORCHESTRATOR_CHARGE_UPDATE_ptt"
                      operation="update"
                      inputVariable="Invoke_LogChargeUpdate_Input"
                      bpelx:invokeAsDetail="no"/>
            </if>
          </sequence>
        </scope>
        <reply name="ReplyFault" faultName="client:fault"
               variable="generalResponse" partnerLink="paymentprocess_client"
               portType="client:BasicPaymentPort" operation="ExecuteOrder"/>
        <exit name="Exit2"/>
      </sequence>
    </catch>
    <catchAll>
      <sequence name="FaultNotification">
        <scope name="LogOrchestratorChargeUpdateProcessError" exitOnStandardFault="no">
          <bpelx:annotation>
            <bpelx:general>
              <bpelx:property name="userLabel">LogChargeUpdateError</bpelx:property>
              <bpelx:property name="userDescription">ErrorParametrizado</bpelx:property>
              <bpelx:property name="userImage">database_lg.png</bpelx:property>
            </bpelx:general>
          </bpelx:annotation>
          <faultHandlers>
            <catchAll>
              <scope name="faultNotification" exitOnStandardFault="no">
                <bpelx:annotation>
                  <bpelx:general>
                    <bpelx:property name="userImage">earth.png</bpelx:property>
                  </bpelx:general>
                </bpelx:annotation>
                <faultHandlers>
                  <catch faultName="ns16:fault" faultVariable="faultVariable"
                         faultElement="ns9:GeneralResponse">
                    <sequence name="fault">
                      <empty name="Empty1"/>
                    </sequence>
                  </catch>
                </faultHandlers>
                <sequence name="faultNotification">
                  <assign name="AssignFaultNotification">
                    <copy>
                      <from>$uti</from>
                      <to>$Invoke_CreateFault_Input.body/uti</to>
                    </copy>
                    <copy>
                      <from><literal>5</literal></from>
                      <to>$Invoke_CreateFault_Input.body/errorID</to>
                    </copy>
                    <copy>
                      <from><literal>177</literal></from>
                      <to>$Invoke_CreateFault_Input.body/serviceID</to>
                    </copy>
                    <copy>
                      <from><literal>O2Service_Bpel</literal></from>
                      <to>$Invoke_CreateFault_Input.body/serviceDetailID</to>
                    </copy>
                    <copy>
                      <from><literal>SOA</literal></from>
                      <to>$Invoke_CreateFault_Input.body/userName</to>
                    </copy>
                    <copy>
                      <from><literal>LogOrchestratorChargeUpdateProcessError - PaymentProcess</literal></from>
                      <to>$Invoke_CreateFault_Input.body/stageName</to>
                    </copy>
                    <copy>
                      <from>ora:getFaultAsString()</from>
                      <to>$Invoke_CreateFault_Input.body/detailError</to>
                    </copy>
                    <copy>
                      <from><literal>INS_ORCHESTRATOR_CHARGE_UPDATE</literal></from>
                      <to>$Invoke_CreateFault_Input.body/instanceID</to>
                    </copy>
                    <copy>
                      <from><literal>656</literal></from>
                      <to>$Invoke_CreateFault_Input.body/errorMappingID</to>
                    </copy>
                    <copy>
                      <from><literal>O2_TEC20</literal></from>
                      <to>$Invoke_CreateFault_Input.body/reasonID</to>
                    </copy>
                  </assign>
                  <invoke name="InvokeFaultNotification"
                          partnerLink="FaultNotificationService"
                          portType="ns16:FaultNotification_Port"
                          operation="CreateFault"
                          inputVariable="Invoke_CreateFault_Input"
                          outputVariable="Invoke_CreateFault_Output"
                          bpelx:invokeAsDetail="no"/>
                </sequence>
              </scope>
            </catchAll>
          </faultHandlers>
          <sequence name="LogOrchestratorChargeUpdateProcessError">
            <if name="ChargeUpdate">
              <documentation>NotEmpty</documentation>
              <condition>ora:countNodes('Invoke_LogChargeUpdate_Input','LogOrchestratorChargeCollection','ns15:LogOrchestratorCharge') &gt; 0</condition>
              <invoke name="Invoke_LogChargeUpdate"
                      partnerLink="LOG_ORCHESTRATOR_CHARGE_UPDATE"
                      portType="ns14:LOG_ORCHESTRATOR_CHARGE_UPDATE_ptt"
                      operation="update"
                      inputVariable="Invoke_LogChargeUpdate_Input"
                      bpelx:invokeAsDetail="no"/>
            </if>
          </sequence>
        </scope>
        <scope name="FaultNotificationProcessError" exitOnStandardFault="no">
          <bpelx:annotation>
            <bpelx:general>
              <bpelx:property name="userImage">earth.png</bpelx:property>
            </bpelx:general>
          </bpelx:annotation>
          <faultHandlers>
            <catch faultName="ns16:fault" faultVariable="faultVariable"
                   faultElement="ns9:GeneralResponse">
              <assign name="AssignGeneralResponse">
                <copy>
                  <from>$uti</from>
                  <to>$generalResponse.fault/uti</to>
                </copy>
                <copy>
                  <from>$faultVariable/status</from>
                  <to>$generalResponse.fault/status</to>
                </copy>
                <copy>
                  <from>$faultVariable/code</from>
                  <to>$generalResponse.fault/code</to>
                </copy>
                <copy>
                  <from>$faultVariable/message</from>
                  <to>$generalResponse.fault/message</to>
                </copy>
              </assign>
            </catch>
          </faultHandlers>
          <sequence name="FaultNotificationProcessError">
            <assign name="AssignFaultNotification">
              <copy>
                <from><literal>FaultNotificationProcessError - PaymentProcess</literal></from>
                <to>$Invoke_CreateFault_Input.body/stageName</to>
              </copy>
              <copy>
                <from><literal>177</literal></from>
                <to>$Invoke_CreateFault_Input.body/serviceID</to>
              </copy>
              <copy>
                <from>ora:getFaultAsString()</from>
                <to>$Invoke_CreateFault_Input.body/detailError</to>
              </copy>
              <copy>
                <from><literal>SOA</literal></from>
                <to>$Invoke_CreateFault_Input.body/userName</to>
              </copy>
              <copy>
                <from><literal>O2Service_Bpel</literal></from>
                <to>$Invoke_CreateFault_Input.body/serviceDetailID</to>
              </copy>
              <copy>
                <from>$uti</from>
                <to>$Invoke_CreateFault_Input.body/uti</to>
              </copy>
              <copy>
                <from><literal>3</literal></from>
                <to>$Invoke_CreateFault_Input.body/errorID</to>
              </copy>
              <copy>
                <from><literal>INS_O2_PAYMENT_PROCESS</literal></from>
                <to>$Invoke_CreateFault_Input.body/instanceID</to>
              </copy>
              <copy>
                <from><literal>O2_TEC21</literal></from>
                <to>$Invoke_CreateFault_Input.body/reasonID</to>
              </copy>
              <copy>
                <from><literal>305</literal></from>
                <to>$Invoke_CreateFault_Input.body/errorMappingID</to>
              </copy>
            </assign>
            <invoke name="InvokeFaultNotification"
                    partnerLink="FaultNotificationService"
                    portType="ns16:FaultNotification_Port"
                    operation="CreateFault"
                    inputVariable="Invoke_CreateFault_Input"
                    outputVariable="Invoke_CreateFault_Output"
                    bpelx:invokeAsDetail="no"/>
          </sequence>
        </scope>
        <reply name="ReplyFault" faultName="client:fault"
               variable="generalResponse" partnerLink="paymentprocess_client"
               portType="client:BasicPaymentPort" operation="ExecuteOrder"/>
        <exit name="Exit2"/>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">
    <!-- Receive input from requestor. (Note: This maps to operation defined in PaymentProcess.wsdl) -->
    <receive name="receiveInput" partnerLink="paymentprocess_client"
             portType="client:BasicPaymentPort" operation="ExecuteOrder"
             variable="inputVariable" createInstance="yes"/>
    <flow name="Inicializar">
      <sequence name="uti">
        <assign name="AssignUti">
          <copy>
            <from>ora:getECID()</from>
            <to>$uti</to>
          </copy>
        </assign>
      </sequence>
      <sequence name="ReferenceTransactionDate">
        <assign name="AssignReferenceTransactionDate">
          <copy ignoreMissingFromData="yes">
            <from>$inputVariable.body/charges/ns5:charge[1]/ns6:additionals/additional[name='REFERENCETRANSACTIONDATE']/value</from>
            <to>$ReferenceTransactionDate</to>
          </copy>
        </assign>
      </sequence>
    </flow>
    <forEach parallel="no" counterName="orderCounter" name="Orders">
      <startCounterValue>1</startCounterValue>
      <finalCounterValue>ora:countNodes('inputVariable','body','charges/ns5:charge')</finalCounterValue>
      <scope name="Orders" exitOnStandardFault="no">
        <sequence name="Order">
          <scope name="InsertOrchestratorPayment" exitOnStandardFault="no">
            <bpelx:annotation>
              <bpelx:general>
                <bpelx:property name="userImage">database_lg.png</bpelx:property>
                <bpelx:property name="userDescription">ErrorParametrizado</bpelx:property>
              </bpelx:general>
            </bpelx:annotation>
            <faultHandlers>
              <catchAll>
                <scope name="faultNotification" exitOnStandardFault="no">
                  <bpelx:annotation>
                    <bpelx:general>
                      <bpelx:property name="userImage">earth.png</bpelx:property>
                    </bpelx:general>
                  </bpelx:annotation>
                  <faultHandlers>
                    <catch faultName="ns16:fault" faultVariable="faultVariable"
                           faultElement="ns9:GeneralResponse">
                      <sequence name="fault">
                        <assign name="AssignGeneralResponse">
                          <copy>
                            <from>$uti</from>
                            <to>$generalResponse.fault/uti</to>
                          </copy>
                          <copy>
                            <from>$faultVariable/status</from>
                            <to>$generalResponse.fault/status</to>
                          </copy>
                          <copy>
                            <from>$faultVariable/code</from>
                            <to>$generalResponse.fault/code</to>
                          </copy>
                          <copy>
                            <from>$faultVariable/message</from>
                            <to>$generalResponse.fault/message</to>
                          </copy>
                        </assign>
                        <throw name="FaultNotification" faultName="ns16:fault"
                               faultVariable="globalFaultVar"/>
                      </sequence>
                    </catch>
                  </faultHandlers>
                  <sequence name="faultNotification">
                    <assign name="AssignFaultNotification">
                      <copy>
                        <from>$uti</from>
                        <to>$Invoke_CreateFault_Input.body/uti</to>
                      </copy>
                      <copy>
                        <from><literal>INS_ORCHESTRATOR_CHARGE_INSERT</literal></from>
                        <to>$Invoke_CreateFault_Input.body/instanceID</to>
                      </copy>
                      <copy>
                        <from><literal>302</literal></from>
                        <to>$Invoke_CreateFault_Input.body/errorMappingID</to>
                      </copy>
                      <copy>
                        <from><literal>O2_TEC18</literal></from>
                        <to>$Invoke_CreateFault_Input.body/reasonID</to>
                      </copy>
                      <copy>
                        <from><literal>5</literal></from>
                        <to>$Invoke_CreateFault_Input.body/errorID</to>
                      </copy>
                      <copy>
                        <from><literal>177</literal></from>
                        <to>$Invoke_CreateFault_Input.body/serviceID</to>
                      </copy>
                      <copy>
                        <from><literal>O2Service_Bpel</literal></from>
                        <to>$Invoke_CreateFault_Input.body/serviceDetailID</to>
                      </copy>
                      <copy>
                        <from><literal>SOA</literal></from>
                        <to>$Invoke_CreateFault_Input.body/userName</to>
                      </copy>
                      <copy>
                        <from><literal>InsertOrchestratorPayment - PaymentProcess</literal></from>
                        <to>$Invoke_CreateFault_Input.body/stageName</to>
                      </copy>
                      <copy>
                        <from>ora:getFaultAsString()</from>
                        <to>$Invoke_CreateFault_Input.body/detailError</to>
                      </copy>
                    </assign>
                    <invoke name="InvokeFaultNotification"
                            partnerLink="FaultNotificationService"
                            portType="ns16:FaultNotification_Port"
                            operation="CreateFault"
                            inputVariable="Invoke_CreateFault_Input"
                            outputVariable="Invoke_CreateFault_Output"
                            bpelx:invokeAsDetail="no"/>
                  </sequence>
                </scope>
              </catchAll>
            </faultHandlers>
            <sequence name="InsertOrchestratorPayment">
              <assign name="Assign_LogChargeInsert">
                <copy>
                  <from>$uti</from>
                  <to>$Invoke_LogChargeInsert_Input.LogOrchestratorChargeCollection/ns13:LogOrchestratorCharge/ns13:correlationId</to>
                </copy>
                <copy>
                  <from>oraext:generate-guid()</from>
                  <to>$Invoke_LogChargeInsert_Input.LogOrchestratorChargeCollection/ns13:LogOrchestratorCharge/ns13:id</to>
                </copy>
                <copy>
                  <from>$inputVariable.body/charges/ns5:charge[$orderCounter]/value</from>
                  <to>$Invoke_LogChargeInsert_Input.LogOrchestratorChargeCollection/ns13:LogOrchestratorCharge/ns13:value</to>
                </copy>
                <copy>
                  <from>$inputVariable.body/charges/ns5:charge[$orderCounter]/wallet</from>
                  <to>$Invoke_LogChargeInsert_Input.LogOrchestratorChargeCollection/ns13:LogOrchestratorCharge/ns13:wallet</to>
                </copy>
                <copy>
                  <from>$inputVariable.body/charges/ns5:charge[$orderCounter]/walletID</from>
                  <to>$Invoke_LogChargeInsert_Input.LogOrchestratorChargeCollection/ns13:LogOrchestratorCharge/ns13:walletId</to>
                </copy>
                <copy>
                  <from>$inputVariable.body/charges/ns5:charge[$orderCounter]/chargeReference</from>
                  <to>$Invoke_LogChargeInsert_Input.LogOrchestratorChargeCollection/ns13:LogOrchestratorCharge/ns13:chargeReference</to>
                </copy>
                <copy>
                  <from>$inputVariable.body/ns4:client/ID</from>
                  <to>$Invoke_LogChargeInsert_Input.LogOrchestratorChargeCollection/ns13:LogOrchestratorCharge/ns13:idCliente</to>
                </copy>
                <copy>
                  <from>$inputVariable.body/ns4:client/idType</from>
                  <to>$Invoke_LogChargeInsert_Input.LogOrchestratorChargeCollection/ns13:LogOrchestratorCharge/ns13:idType</to>
                </copy>
                <copy>
                  <from>$ReferenceTransactionDate</from>
                  <to>$Invoke_LogChargeInsert_Input.LogOrchestratorChargeCollection/ns13:LogOrchestratorCharge/ns13:referencetransactiondate</to>
                </copy>
                <copy>
                  <from><literal>PROCESSING</literal></from>
                  <to>$Invoke_LogChargeInsert_Input.LogOrchestratorChargeCollection/ns13:LogOrchestratorCharge/ns13:status</to>
                </copy>
              </assign>
              <invoke name="Invoke_LogChargeInsert"
                      partnerLink="LOG_ORCHESTRATOR_CHARGE"
                      portType="ns12:LOG_ORCHESTRATOR_CHARGE_ptt"
                      operation="insert"
                      inputVariable="Invoke_LogChargeInsert_Input"
                      bpelx:invokeAsDetail="no"/>
            </sequence>
          </scope>
          <sequence name="PreparedUpdate">
            <assign name="Assign_Update">
              <copy>
                <from>$Invoke_LogChargeInsert_Input.LogOrchestratorChargeCollection/ns13:LogOrchestratorCharge[1]/ns13:id</from>
                <to>$LogChargeVariable/ns15:LogOrchestratorCharge/ns15:id</to>
              </copy>
              <extensionAssignOperation>
                <bpelx:append>
                  <bpelx:from>$LogChargeVariable/ns15:LogOrchestratorCharge</bpelx:from>
                  <bpelx:to>$Invoke_LogChargeUpdate_Input.LogOrchestratorChargeCollection</bpelx:to>
                </bpelx:append>
              </extensionAssignOperation>
            </assign>
          </sequence>
        </sequence>
      </scope>
    </forEach>
    <!-- Generate reply to synchronous request -->
    <scope name="PaymentService" exitOnStandardFault="no">
      <bpelx:annotation>
        <bpelx:general>
          <bpelx:property name="userDescription">ErrorParametrizado</bpelx:property>
          <bpelx:property name="userImage">earth.png</bpelx:property>
        </bpelx:general>
      </bpelx:annotation>
      <faultHandlers>
        <catch faultName="ns1:fault" faultVariable="faultVariable"
               faultElement="ns9:GeneralResponse">
          <sequence name="fault">
            <assign name="Assign_Uti">
              <copy>
                <from>$faultVariable/uti</from>
                <to>$generalResponse.fault/uti</to>
              </copy>
            </assign>
            <assign name="Transform_ToChargeUpdate">
              <bpelx:annotation>
                <bpelx:pattern patternName="bpelx:transformation"/>
              </bpelx:annotation>
              <copy>
                <from>ora:doXSLTransformForDoc("xsl/Transformation_PaymentToUpdateChargeError.xsl", $Invoke_LogChargeUpdate_Input.LogOrchestratorChargeCollection, "generalResponse.fault", $generalResponse.fault)</from>
                <to variable="Invoke_LogChargeUpdate_Input"
                    part="LogOrchestratorChargeCollection"/>
              </copy>
            </assign>
            <assign name="Assign_ReplyFault">
              <copy>
                <from>$faultVariable/status</from>
                <to>$generalResponse.fault/status</to>
              </copy>
              <copy>
                <from>$uti</from>
                <to>$generalResponse.fault/uti</to>
              </copy>
              <copy>
                <from>$faultVariable/code</from>
                <to>$generalResponse.fault/code</to>
              </copy>
              <copy>
                <from>$faultVariable/message</from>
                <to>$generalResponse.fault/message</to>
              </copy>
            </assign>
            <throw name="FaultNotification" faultName="ns16:fault"
                   faultVariable="globalFaultVar"/>
          </sequence>
        </catch>
        <catchAll>
          <scope name="faultNotification" exitOnStandardFault="no">
            <bpelx:annotation>
              <bpelx:general>
                <bpelx:property name="userImage">earth.png</bpelx:property>
              </bpelx:general>
            </bpelx:annotation>
            <faultHandlers>
              <catch faultName="ns16:fault" faultVariable="faultVariable"
                     faultElement="ns9:GeneralResponse">
                <sequence name="fault">
                  <assign name="AssignGeneralResponse">
                    <copy>
                      <from>$faultVariable/status</from>
                      <to>$generalResponse.fault/status</to>
                    </copy>
                    <copy>
                      <from>$faultVariable/code</from>
                      <to>$generalResponse.fault/code</to>
                    </copy>
                    <copy>
                      <from>$faultVariable/message</from>
                      <to>$generalResponse.fault/message</to>
                    </copy>
                    <copy>
                      <from>$uti</from>
                      <to>$generalResponse.fault/uti</to>
                    </copy>
                  </assign>
                  <throw name="FaultNotification" faultName="ns16:fault"
                         faultVariable="globalFaultVar"/>
                </sequence>
              </catch>
            </faultHandlers>
            <sequence name="faultNotification">
              <assign name="AssignFaultNotification">
                <copy>
                  <from>$uti</from>
                  <to>$Invoke_CreateFault_Input.body/uti</to>
                </copy>
                <copy>
                  <from><literal>INS_O2_PAYMENT</literal></from>
                  <to>$Invoke_CreateFault_Input.body/instanceID</to>
                </copy>
                <copy>
                  <from><literal>O2_TEC19</literal></from>
                  <to>$Invoke_CreateFault_Input.body/reasonID</to>
                </copy>
                <copy>
                  <from><literal>303</literal></from>
                  <to>$Invoke_CreateFault_Input.body/errorMappingID</to>
                </copy>
                <copy>
                  <from><literal>6</literal></from>
                  <to>$Invoke_CreateFault_Input.body/errorID</to>
                </copy>
                <copy>
                  <from><literal>177</literal></from>
                  <to>$Invoke_CreateFault_Input.body/serviceID</to>
                </copy>
                <copy>
                  <from><literal>O2Service_Bpel</literal></from>
                  <to>$Invoke_CreateFault_Input.body/serviceDetailID</to>
                </copy>
                <copy>
                  <from><literal>SOA</literal></from>
                  <to>$Invoke_CreateFault_Input.body/userName</to>
                </copy>
                <copy>
                  <from><literal>PaymentService - PaymentProcess</literal></from>
                  <to>$Invoke_CreateFault_Input.body/stageName</to>
                </copy>
                <copy>
                  <from>ora:getFaultAsString()</from>
                  <to>$Invoke_CreateFault_Input.body/detailError</to>
                </copy>
              </assign>
              <invoke name="InvokeFaultNotification"
                      partnerLink="FaultNotificationService"
                      portType="ns16:FaultNotification_Port"
                      operation="CreateFault"
                      inputVariable="Invoke_CreateFault_Input"
                      outputVariable="Invoke_CreateFault_Output"
                      bpelx:invokeAsDetail="no"/>
            </sequence>
          </scope>
        </catchAll>
      </faultHandlers>
      <sequence name="PaymentService">
        <assign name="Assign_PaymentService">
          <copy>
            <from>$inputVariable.body/ns3:basicRequest</from>
            <to>$Invoke_PaymentService_Input.body/ns3:basicRequest</to>
          </copy>
          <copy>
            <from>$inputVariable.body/ns4:client</from>
            <to>$Invoke_PaymentService_Input.body/ns4:client</to>
          </copy>
          <copy>
            <from>$inputVariable.body/charges</from>
            <to>$Invoke_PaymentService_Input.body/charges</to>
          </copy>
          <copy>
            <from>$inputVariable.body/dataChangeRequest_orders</from>
            <to>$Invoke_PaymentService_Input.body/dataChangeRequest_orders</to>
          </copy>
          <copy>
            <from>$inputVariable.body/field_orders</from>
            <to>$Invoke_PaymentService_Input.body/field_orders</to>
          </copy>
        </assign>
        <assign name="Transform_To_Payment">
          <bpelx:annotation>
            <bpelx:pattern patternName="bpelx:transformation"/>
          </bpelx:annotation>
          <copy>
            <from>ora:doXSLTransformForDoc("xsl/Transformation_PaymentInputToPaymentInput.xsl", $Invoke_PaymentService_Input.body)</from>
            <to variable="Invoke_PaymentService_Input" part="body"/>
          </copy>
        </assign>
        <invoke name="Invoke_PaymentService"
                partnerLink="PaymentMediator.PaymentMediator"
                portType="ns1:BasicPaymentPort" operation="ExecutePayment"
                inputVariable="Invoke_PaymentService_Input"
                outputVariable="Invoke_PaymentService_Output"
                bpelx:invokeAsDetail="no"/>
      </sequence>
    </scope>
    <scope name="LogOrchestratorChargeUpdate" exitOnStandardFault="no">
      <bpelx:annotation>
        <bpelx:general>
          <bpelx:property name="userLabel">LogChargeUpdateOk</bpelx:property>
          <bpelx:property name="userDescription">ErrorParametrizado</bpelx:property>
          <bpelx:property name="userImage">database_lg.png</bpelx:property>
        </bpelx:general>
      </bpelx:annotation>
      <faultHandlers>
        <catchAll>
          <scope name="faultNotification" exitOnStandardFault="no">
            <bpelx:annotation>
              <bpelx:general>
                <bpelx:property name="userImage">earth.png</bpelx:property>
              </bpelx:general>
            </bpelx:annotation>
            <faultHandlers>
              <catch faultName="ns16:fault" faultVariable="faultVariable"
                     faultElement="ns9:GeneralResponse">
                <sequence name="fault">
                  <assign name="AssignGeneralResponse">
                    <copy>
                      <from>$uti</from>
                      <to>$generalResponse.fault/uti</to>
                    </copy>
                    <copy>
                      <from>$faultVariable/status</from>
                      <to>$generalResponse.fault/status</to>
                    </copy>
                    <copy>
                      <from>$faultVariable/code</from>
                      <to>$generalResponse.fault/code</to>
                    </copy>
                    <copy>
                      <from>$faultVariable/message</from>
                      <to>$generalResponse.fault/message</to>
                    </copy>
                  </assign>
                  <throw name="FaultNotification" faultName="ns16:fault"
                         faultVariable="globalFaultVar"/>
                </sequence>
              </catch>
            </faultHandlers>
            <sequence name="faultNotification">
              <assign name="AssignFaultNotification">
                <copy>
                  <from>$uti</from>
                  <to>$Invoke_CreateFault_Input.body/uti</to>
                </copy>
                <copy>
                  <from><literal>5</literal></from>
                  <to>$Invoke_CreateFault_Input.body/errorID</to>
                </copy>
                <copy>
                  <from><literal>177</literal></from>
                  <to>$Invoke_CreateFault_Input.body/serviceID</to>
                </copy>
                <copy>
                  <from><literal>O2Service_Bpel</literal></from>
                  <to>$Invoke_CreateFault_Input.body/serviceDetailID</to>
                </copy>
                <copy>
                  <from><literal>SOA</literal></from>
                  <to>$Invoke_CreateFault_Input.body/userName</to>
                </copy>
                <copy>
                  <from><literal>LogOrchestratorChargeUpdate - PaymentProcess</literal></from>
                  <to>$Invoke_CreateFault_Input.body/stageName</to>
                </copy>
                <copy>
                  <from>ora:getFaultAsString()</from>
                  <to>$Invoke_CreateFault_Input.body/detailError</to>
                </copy>
                <copy>
                  <from><literal>INS_ORCHESTRATOR_CHARGE_UPDATE</literal></from>
                  <to>$Invoke_CreateFault_Input.body/instanceID</to>
                </copy>
                <copy>
                  <from><literal>656</literal></from>
                  <to>$Invoke_CreateFault_Input.body/errorMappingID</to>
                </copy>
                <copy>
                  <from><literal>O2_TEC20</literal></from>
                  <to>$Invoke_CreateFault_Input.body/reasonID</to>
                </copy>
              </assign>
              <invoke name="InvokeFaultNotification"
                      partnerLink="FaultNotificationService"
                      portType="ns16:FaultNotification_Port"
                      operation="CreateFault"
                      inputVariable="Invoke_CreateFault_Input"
                      outputVariable="Invoke_CreateFault_Output"
                      bpelx:invokeAsDetail="no"/>
            </sequence>
          </scope>
        </catchAll>
      </faultHandlers>
      <sequence name="LogOrchestratorChargeUpdate">
        <assign name="Transform_ToChargeUpdate">
          <bpelx:annotation>
            <bpelx:pattern patternName="bpelx:transformation"/>
          </bpelx:annotation>
          <copy>
            <from>ora:doXSLTransformForDoc("xsl/Transformation_PaymentOutToUpdateChargeOk.xsl", $Invoke_LogChargeUpdate_Input.LogOrchestratorChargeCollection, "Invoke_PaymentService_Output.body", $Invoke_PaymentService_Output.body)</from>
            <to variable="Invoke_LogChargeUpdate_Input"
                part="LogOrchestratorChargeCollection"/>
          </copy>
        </assign>
        <invoke name="Invoke_LogChargeUpdate"
                partnerLink="LOG_ORCHESTRATOR_CHARGE_UPDATE"
                portType="ns14:LOG_ORCHESTRATOR_CHARGE_UPDATE_ptt"
                operation="update" inputVariable="Invoke_LogChargeUpdate_Input"
                bpelx:invokeAsDetail="no"/>
      </sequence>
    </scope>
    <sequence name="Reply">
      <assign name="Assign_Reply">
        <copy>
          <from>$uti</from>
          <to>$outputVariable.body/generalResponse/uti</to>
        </copy>
        <copy>
          <from><literal>OK</literal></from>
          <to>$outputVariable.body/generalResponse/status</to>
        </copy>
        <copy>
          <from><literal>01</literal></from>
          <to>$outputVariable.body/generalResponse/code</to>
        </copy>
        <copy>
          <from><literal>Service has been completed</literal></from>
          <to>$outputVariable.body/generalResponse/message</to>
        </copy>
      </assign>
      <reply name="replyOutput" partnerLink="paymentprocess_client"
             portType="client:BasicPaymentPort" operation="ExecuteOrder"
             variable="outputVariable"/>
    </sequence>
  </sequence>
</process>